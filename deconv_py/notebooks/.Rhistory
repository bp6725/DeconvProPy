help(package='cellMix')
#help(package='cellMix')
demo()
gedAlgorithm
gedAlgorithm()
library('cellMix')
library('cellmix')
library('CellMix')
cellmix.options()
gedAlgorithm()
gedAlgorithmInfo()
lsfit
b_df <- read_feather(b_path)
install.packages('feather')
a_df
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
getwd()
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
list()
list
list.files()
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
list.files()
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
stop()
script.dir <- dirname(sys.frame(1)$ofile)
script.dir <- dirname(sys.frame(0)$ofile)
getSrcDirectory(function(x) {x})
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
View(a_df)
View(a_df)
help("CellMix")
help("CellMix.ged")
help("ged")
ged(b_df,a_df)
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
install.packages("tibble")
install.packages("tibble")
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
install.packages('NMF')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
install.packages('tibble')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
View(a_df)
View(a_df)
typeof(a_df)
df <- data.frame(matrix(a_df(l), nrow=length(l), byrow=T))
df <- data.frame(matrix(unlist(a_df), nrow=length(l), byrow=T))
df <- data.frame(matrix(unlist(a_df), nrow=length(a_df), byrow=T))
View(df)
help("data.frame")
a_df[0]
a_df[2]
a_df[2,1]
a_df[2,0]
a_df[0,0]
a_df[1,1]
a_df[1,0]
View(a_df)
columns(a_df)
do.call(rbind.data.frame, a_df)
res <- do.call(rbind.data.frame, a_df)
View(res)
library (plyr)
df <- ldply (a_df, data.frame)
View(df)
df <- data.frame(t(sapply(mylistlist,c)))
df <- data.frame(t(sapply(a_df,c)))
View(df)
View(a_df)
View(df)
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
help("ged")
summery(res)
summary(res)
coef(res)
res
dim(b_df)
test <- rmix(1,100,20)
dim(test)
dim(b_df)
dim(a_df)
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
t(data.matrix(b_df))
if (any(is.na(a_df) {next}
if (any(is.na(a_df) {next})
if (any(is.na(a_df) )){next}
if (any(is.na(a_df) )){print('yes')}
is.na(a_df)
res <- ged(t(data.matrix(b_df)),t(data.matrix(a_df)))
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
mixture
if (any(is.na(a_df) )){print('yes')}
if (any(~is.na(a_df) )){print('yes')}
if (any(is.na(a_df) )){print('yes')}
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
rowSums(a)!=0
rowSums(a_df)!=0
rowSums(mixture)!=0
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
coef(res)
source('C:/Repos/deconv_py/deconv_py/notebooks/cell_mix_script.R')
coef(res)
coef(res)
type(coef(res))
final_res <- coef(res)
View(final_res)
str(res)
print_log( dir_path,verbose)
source('C:/Repos/deconv_py/deconv_py/infras/cellMix/ged_script.R')
calculate_result <- function(dir_path){
mixture_path <- file.path(dir_path,"\\mixture")
sign_path <-  file.path(dir_path,"\\sign")
mixture <- t(data.matrix(data.frame(t(sapply(read_feather(mixture_path),c)))))
sig <- t(data.matrix(data.frame(t(sapply(read_feather(sign_path),c)))))
mixture.non0 = mixture[rowSums(mixture)!=0,]
bloblob
print_log("start ged",verbose)
ged_res <- ged(mixture.non0,sig)
final_res <- coef(ged_res)
print_log("write_results to csv",verbose)
write.csv(final_res,file.path(dir_path,"\\ged_res"))
print_log("write finish indc",verbose)
fileConn<-file(file.path(dir_path,"\\run_finished.txt"))
writeLines("finish", fileConn)
close(fileConn)
}
print('start Rscript')
options(warn=-1)
library('CellMix')
library('feather')
print_log <- function(message,verbose) {
if (verbose) {
print(message)
}
}
args = commandArgs(trailingOnly=TRUE)
#dir_path <- args[1]
dir_path <- "C:\Repos\deconv_py\deconv_py\infras\cellMix\39_16_22_10_2019_125"
verbose <- TRUE
print_log("dir path is :" ,verbose)
print_log( dir_path,verbose)
calculate_result <- function(dir_path){
mixture_path <- file.path(dir_path,"\\mixture")
sign_path <-  file.path(dir_path,"\\sign")
mixture <- t(data.matrix(data.frame(t(sapply(read_feather(mixture_path),c)))))
sig <- t(data.matrix(data.frame(t(sapply(read_feather(sign_path),c)))))
mixture.non0 = mixture[rowSums(mixture)!=0,]
bloblob
print_log("start ged",verbose)
ged_res <- ged(mixture.non0,sig)
final_res <- coef(ged_res)
print_log("write_results to csv",verbose)
write.csv(final_res,file.path(dir_path,"\\ged_res"))
print_log("write finish indc",verbose)
fileConn<-file(file.path(dir_path,"\\run_finished.txt"))
writeLines("finish", fileConn)
close(fileConn)
}
on_failer <- function(e) {
print_log("write fail indc",verbose)
fileConn<-file(file.path(dir_path,"\\run_failed.txt"))
writeLines(str(e), fileConn)
close(fileConn)
}
tryCatch(calculate_result(dir_path = dir_path),error = on_failer)
print_log("write fail indc",verbose)
debugSource('C:/Repos/deconv_py/deconv_py/infras/cellMix/ged_script.R')
debugSource('C:/Repos/deconv_py/deconv_py/infras/cellMix/ged_script.R')
